<beast version='2.0'
       namespace='beast.app.beauti
                 :beast.core            
                 :beast.core.util
                 :beast.evolution
                 :beast.evolution.nuc
                 :beast.evolution.operators
                 :beast.evolution.sitemodel
                 :beast.evolution.substitutionmodel
                 :beast.evolution.likelihood
                 :beast.evolution.branchratemodel
                 :beast.evolution.speciation
                 :beast.evolution.tree.coalescent
                 :beast.math.distributions
                 :bsp.distributions
                 :bsp.util'>


    <mergewith point='misc' fragment="@TreeOperators"/>


 	<!-- BSP tree prior configurations -->
    <mergewith point='treePriorTemplates'>

   		<!-- Coalescent BSP -->        
        <subtemplate id='CoalescentBSP' class='bsp.distributions.BSP'
                     mainid='BSP.t:$(n)'
                     suppressInputs='beast.math.distributions.MarkovChainDistribution.parameter,                                     
                                     bsp.distributions.BSP.tree,
                                     bsp.distributions.BSP.treeIntervals,
                                     bsp.distributions.BSP.popSizes,
                                     bsp.distributions.BSP.popSizeGroupSizes,
                                     bsp.distributions.BSP.popSizeEpochTimes,
                                     bsp.distributions.BSP.numInitializationAttempts'>

            <plate var="b" range="BSP">

                <![CDATA[

    	            <distribution spec="bsp.distributions.BSP" id='$(b).t:$(n)'>
    	                <parameter name='popSizes' id='$(b)PopSizes.t:$(n)' dimension="5" value="380.0" lower="0.0" estimate='true'/>
    	                <popSizeGroupSizes spec='parameter.IntegerParameter' id='$(b)GroupSizes.t:$(n)' dimension='5' value='1' estimate='true'/>
    	                <treeIntervals spec='TreeIntervals' id='$(b)TreeIntervals.t:$(n)' tree='@Tree.t:$(n)'/>
    	            </distribution>

    	            <distribution id='$(b)MarkovChainedPopSizes.t:$(n)' spec="beast.math.distributions.MarkovChainDistribution" 
    					jeffreys="true"
    					parameter="@$(b)PopSizes.t:$(n)"/>

    			    <operator id='$(b)popSizesScaler.t:$(n)' spec='ScaleOperator' scaleFactor="0.75" weight="15" parameter="@$(b)PopSizes.t:$(n)"/>
    			    <operator id='$(b)groupSizesDelta.t:$(n)' spec='DeltaExchangeOperator' delta="1" weight="6" integer="true"
    			              intparameter="@$(b)GroupSizes.t:$(n)"/>

                    <plugin id="$(b)PopSizeChangeTimes.t:$(n)" spec="bsp.util.popSizeChangeTimeLogger" skyline="@$(b).t:$(n)"/>        

    			]]>


                <!-- Connect prior distributions to prior -->
                <connect srcID='$(b).t:$(n)' targetID='prior' inputName='distribution'
                         if='inposterior($(b).t:$(n)) and Tree.t:$(n)/estimate=true'>Coalescent with Bayesian
                    skyline prior tree t:$(n)
                </connect>
                <connect srcID='$(b)MarkovChainedPopSizes.t:$(n)' targetID='prior' inputName='distribution'
                         if='inposterior($(b).t:$(n))'>Markov chained prior on population sizes of Bayesian
                    skyline plot
                </connect>

                <!-- Connect parameters to state -->
                <connect srcID='$(b)PopSizes.t:$(n)' targetID='state' inputName='stateNode'
                         if='inposterior($(b).t:$(n)) and inposterior($(b)PopSizes.t:$(n))'/>
                <connect srcID='$(b)GroupSizes.t:$(n)' targetID='state' inputName='stateNode'
                         if='inposterior($(b).t:$(n)) and inposterior($(b)GroupSizes.t:$(n))'/>

                <!-- Connect parameters to tracelog -->
                <connect srcID='$(b).t:$(n)' targetID='tracelog' inputName='log'
                         if='inposterior($(b).t:$(n))'/>
                <connect srcID='$(b)PopSizes.t:$(n)' targetID='tracelog' inputName='log'
                         if='inposterior($(b).t:$(n))'/>            
                <connect srcID='$(b)GroupSizes.t:$(n)' targetID='tracelog' inputName='log'
                         if='inposterior($(b).t:$(n))'/>
                <connect srcID='$(b)PopSizeChangeTimes.t:$(n)' targetID='tracelog' inputName='log'
                         if='inposterior($(b).t:$(n))'/>            

                <!-- Connect operators -->
                <connect srcID='$(b)popSizesScaler.t:$(n)' targetID='mcmc' inputName='operator'
                         if='inposterior($(b).t:$(n))'>Scale population size of Coalscent prior of tree t:$(n)
                </connect>
                <connect srcID='$(b)groupSizesDelta.t:$(n)' targetID='mcmc' inputName='operator'
                         if='inposterior($(b).t:$(n))'>Exchange group sizes of Coalscent prior of tree t:$(n)
                </connect>

                <plate fragment="TreeOperators" var="m" range="BSP"/>


            </plate>

        </subtemplate>



        <!-- Coalescent BSP Robust Parameterisation -->        
        <subtemplate id='RobustCoalescentBSP' class='bsp.distributions.BSP'
                     mainid='BSPRobust.t:$(n)'
                     suppressInputs='beast.math.distributions.MarkovChainDistribution.parameter,                                     
                                     bsp.distributions.BSP.tree,
                                     bsp.distributions.BSP.treeIntervals,
                                     bsp.distributions.BSP.popSizes,
                                     bsp.distributions.BSP.popSizeGroupSizes,
                                     bsp.distributions.BSP.popSizeEpochTimes,
                                     bsp.distributions.BSP.numInitializationAttempts'>

            <plate var="b" range="BSPRobust">

                <![CDATA[

                    <distribution spec="bsp.distributions.BSP" id='$(b).t:$(n)'>
                        <parameter name='popSizes' id='$(b)PopSizes.t:$(n)' dimension="5" value="380.0" lower="0.0" estimate='true'/>
                        <treeIntervals spec='TreeIntervals' id='$(b)TreeIntervals.t:$(n)' tree='@Tree.t:$(n)'/>
                    </distribution>

                    <distribution id='$(b)MarkovChainedPopSizes.t:$(n)' spec="beast.math.distributions.MarkovChainDistribution" 
                        jeffreys="true"
                        parameter="@$(b)PopSizes.t:$(n)"/>

                    <operator id='$(b)popSizesScaler.t:$(n)' spec='ScaleOperator' scaleFactor="0.75" weight="15" parameter="@$(b)PopSizes.t:$(n)"/>

                    <plugin id="$(b)PopSizeChangeTimes.t:$(n)" spec="bsp.util.popSizeChangeTimeLogger" skyline="@$(b).t:$(n)"/>        

                ]]>

                <!-- Connect prior distributions to prior -->
                <connect srcID='$(b).t:$(n)' targetID='prior' inputName='distribution'
                         if='inposterior($(b).t:$(n)) and Tree.t:$(n)/estimate=true'>Coalescent with Bayesian
                    skyline prior tree t:$(n)
                </connect>
                <connect srcID='$(b)MarkovChainedPopSizes.t:$(n)' targetID='prior' inputName='distribution'
                         if='inposterior($(b).t:$(n))'>Markov chained prior on population sizes of Bayesian
                    skyline plot
                </connect>

                <!-- Connect parameters to state -->
                <connect srcID='$(b)PopSizes.t:$(n)' targetID='state' inputName='stateNode'
                         if='inposterior($(b).t:$(n)) and inposterior($(b)PopSizes.t:$(n))'/>
                
                <!-- Connect parameters to tracelog -->
                <connect srcID='$(b).t:$(n)' targetID='tracelog' inputName='log'
                         if='inposterior($(b).t:$(n))'/>
                <connect srcID='$(b)PopSizes.t:$(n)' targetID='tracelog' inputName='log'
                         if='inposterior($(b).t:$(n))'/>            
                <connect srcID='$(b)PopSizeChangeTimes.t:$(n)' targetID='tracelog' inputName='log'
                         if='inposterior($(b).t:$(n))'/>            

                <!-- Connect operators -->
                <connect srcID='$(b)popSizesScaler.t:$(n)' targetID='mcmc' inputName='operator'
                         if='inposterior($(b).t:$(n))'>Scale population size of Coalscent prior of tree t:$(n)
                </connect>

                <plate fragment="TreeOperators" var="m" range="BSP"/>

                
            </plate>

        </subtemplate>

       

    </mergewith>






</beast>